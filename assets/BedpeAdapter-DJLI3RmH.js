import{u as b,c as y,i as x,d as L,O as $}from"./rpcWorker-DOy5Xw-Q.js";import{I as A}from"./main-BPWpXae6.js";const _=new Set(["DUP","TRA","INV","CNV","DEL"]);function w(f,s,e,a){const t=f.split("	"),n=t[e?3:0],p=+t[e?4:1],o=+t[e?5:2],c=t[e?0:3],i=+t[e?1:4],g=+t[e?2:5],d=t[6],r=+t[7],l=T(t[8]),u=T(t[9]),h=t.slice(10),v=a?Object.fromEntries(a.slice(10).map((D,F)=>[D,h[F]])):h,m=_.has(h[0])?`<${h[0]}>`:void 0;return new b.SimpleFeature({...v,start:p,end:o,type:"paired_feature",refName:n,strand:l,name:d,score:r,uniqueId:s,mate:{refName:c,start:i,end:g,strand:u},...m?{ALT:[m]}:{}})}function T(f){if(f==="+")return 1;if(f==="-")return-1;if(f===".")return 0}class j extends y.BaseFeatureDataAdapter{constructor(){super(...arguments),this.intervalTrees={}}async loadDataP(s={}){const e=this.pluginManager,a=this.getConf("bedpeLocation"),t=await x.openLocation(a,e).readFile(s),n=b.isGzip(t)?await L(t):t;if(n.length>536870888)throw new Error("Data exceeds maximum string length (512MB)");const o=new TextDecoder("utf8",{fatal:!0}).decode(n).split(/\n|\r\n|\r/).filter(u=>!!u),c=[];let i=0;for(;i<o.length&&o[i].startsWith("#");i++)c.push(o[i]);const g=c.join(`
`),d={},r={};for(;i<o.length;i++){const u=o[i],h=u.split("	"),v=h[0],m=h[3];d[v]||(d[v]=[]),r[m]||(r[m]=[]),d[v].push(u),r[m].push(u)}const l=this.getConf("columnNames");return{header:g,feats1:d,feats2:r,columnNames:l}}async loadData(s={}){return this.bedpeFeatures||(this.bedpeFeatures=this.loadDataP(s).catch(e=>{throw this.bedpeFeatures=void 0,e})),this.bedpeFeatures}async getRefNames(s={}){const{feats1:e,feats2:a}=await this.loadData(s);return[...new Set([...Object.keys(e),...Object.keys(a)])]}async getHeader(s={}){const{header:e}=await this.loadData(s);return e}async getNames(){const{header:s,columnNames:e}=await this.loadData();if(e.length)return e;const t=s.split(/\n|\r\n|\r/).filter(n=>!!n).at(-1);return t!=null&&t.includes("	")?t.slice(1).split("	").map(n=>n.trim()):void 0}async loadFeatureTreeP(s){var e,a,t,n;const{feats1:p,feats2:o}=await this.loadData(),c=await this.getNames(),i=new A,g=(a=(e=p[s])===null||e===void 0?void 0:e.map((r,l)=>w(r,`${this.id}-${s}-${l}-r1`,!1,c)))!==null&&a!==void 0?a:[],d=(n=(t=o[s])===null||t===void 0?void 0:t.map((r,l)=>w(r,`${this.id}-${s}-${l}-r2`,!0,c)))!==null&&n!==void 0?n:[];for(const r of[...g,...d])i.insert([r.get("start"),r.get("end")],r);return i}async loadFeatureTree(s){return this.intervalTrees[s]||(this.intervalTrees[s]=this.loadFeatureTreeP(s).catch(e=>{throw this.intervalTrees[s]=void 0,e})),this.intervalTrees[s]}getFeatures(s,e={}){return $(async a=>{const{start:t,end:n,refName:p}=s,o=await this.loadFeatureTree(p);o==null||o.search([t,n]).forEach(c=>{a.next(c)}),a.complete()},e.signal)}freeResources(){}}j.capabilities=["getFeatures","getRefNames"];export{j as default,w as featureData};
//# sourceMappingURL=BedpeAdapter-DJLI3RmH.js.map
