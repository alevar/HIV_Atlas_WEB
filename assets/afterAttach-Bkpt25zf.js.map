{"version":3,"file":"afterAttach-Bkpt25zf.js","sources":["../node_modules/@jbrowse/plugin-alignments/esm/shared/fetchChains.js","../node_modules/@jbrowse/plugin-alignments/esm/shared/afterAttach.js"],"sourcesContent":["import { getContainingTrack, getContainingView, getSession, } from '@jbrowse/core/util';\nimport { getSnapshot } from 'mobx-state-tree';\nexport async function fetchChains(self) {\n    // @ts-expect-error\n    const { rpcSessionId: sessionId } = getContainingTrack(self);\n    const { rpcManager } = getSession(self);\n    const view = getContainingView(self);\n    if (!view.initialized || self.error || self.regionTooLarge) {\n        return;\n    }\n    self.setLoading(true);\n    const ret = (await rpcManager.call(sessionId, 'PileupGetReducedFeatures', {\n        sessionId,\n        regions: view.staticBlocks.contentBlocks,\n        filterBy: getSnapshot(self.filterBy),\n        adapterConfig: self.adapterConfig,\n    }));\n    self.setChainData(ret);\n    self.setLoading(false);\n}\n","import { getContainingView } from '@jbrowse/core/util';\nimport { createAutorun } from '../util';\nimport { fetchChains } from './fetchChains';\nexport function doAfterAttach(self, cb) {\n    createAutorun(self, async () => {\n        await fetchChains(self);\n    }, { delay: 1000 });\n    function draw(view) {\n        const canvas = self.ref;\n        if (!canvas) {\n            return;\n        }\n        const ctx = canvas.getContext('2d');\n        if (!ctx) {\n            return;\n        }\n        if (!self.chainData) {\n            return;\n        }\n        ctx.clearRect(0, 0, canvas.width, self.height * 2);\n        ctx.resetTransform();\n        ctx.scale(2, 2);\n        cb(self, ctx, canvas.width, self.height);\n        self.setLastDrawnOffsetPx(view.offsetPx);\n        self.setLastDrawnBpPerPx(view.bpPerPx);\n    }\n    // first autorun instantly draws if bpPerPx changes\n    createAutorun(self, async () => {\n        const view = getContainingView(self);\n        if (view.bpPerPx !== self.lastDrawnBpPerPx) {\n            draw(view);\n        }\n    });\n    // second autorun draws after delay 1000 e.g. if offsetPx changes\n    createAutorun(self, async () => {\n        const view = getContainingView(self);\n        draw(view);\n    }, { delay: 1000 });\n}\n"],"names":["fetchChains","self","sessionId","getContainingTrack","rpcManager","getSession","view","getContainingView","ret","getSnapshot","doAfterAttach","cb","createAutorun","draw","canvas","ctx"],"mappings":"2DAEO,eAAeA,EAAYC,EAAM,CAEpC,KAAM,CAAE,aAAcC,GAAcC,EAAAA,mBAAmBF,CAAI,EACrD,CAAE,WAAAG,CAAU,EAAKC,EAAU,WAACJ,CAAI,EAChCK,EAAOC,EAAiB,kBAACN,CAAI,EACnC,GAAI,CAACK,EAAK,aAAeL,EAAK,OAASA,EAAK,eACxC,OAEJA,EAAK,WAAW,EAAI,EACpB,MAAMO,EAAO,MAAMJ,EAAW,KAAKF,EAAW,2BAA4B,CACtE,UAAAA,EACA,QAASI,EAAK,aAAa,cAC3B,SAAUG,EAAYR,EAAK,QAAQ,EACnC,cAAeA,EAAK,aAC5B,CAAK,EACDA,EAAK,aAAaO,CAAG,EACrBP,EAAK,WAAW,EAAK,CACzB,CChBO,SAASS,EAAcT,EAAMU,EAAI,CACpCC,EAAcX,EAAM,SAAY,CAC5B,MAAMD,EAAYC,CAAI,CAC9B,EAAO,CAAE,MAAO,IAAM,EAClB,SAASY,EAAKP,EAAM,CAChB,MAAMQ,EAASb,EAAK,IACpB,GAAI,CAACa,EACD,OAEJ,MAAMC,EAAMD,EAAO,WAAW,IAAI,EAC7BC,GAGAd,EAAK,YAGVc,EAAI,UAAU,EAAG,EAAGD,EAAO,MAAOb,EAAK,OAAS,CAAC,EACjDc,EAAI,eAAgB,EACpBA,EAAI,MAAM,EAAG,CAAC,EACdJ,EAAGV,EAAMc,EAAKD,EAAO,MAAOb,EAAK,MAAM,EACvCA,EAAK,qBAAqBK,EAAK,QAAQ,EACvCL,EAAK,oBAAoBK,EAAK,OAAO,EAC7C,CAEIM,EAAcX,EAAM,SAAY,CAC5B,MAAMK,EAAOC,EAAiB,kBAACN,CAAI,EAC/BK,EAAK,UAAYL,EAAK,kBACtBY,EAAKP,CAAI,CAErB,CAAK,EAEDM,EAAcX,EAAM,SAAY,CAC5B,MAAMK,EAAOC,EAAiB,kBAACN,CAAI,EACnCY,EAAKP,CAAI,CACjB,EAAO,CAAE,MAAO,IAAM,CACtB","x_google_ignoreList":[0,1]}