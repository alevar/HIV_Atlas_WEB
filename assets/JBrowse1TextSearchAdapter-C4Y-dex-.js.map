{"version":3,"file":"JBrowse1TextSearchAdapter-C4Y-dex-.js","sources":["../../node_modules/@jbrowse/plugin-legacy-jbrowse/esm/JBrowse1TextSearchAdapter/HttpMap.js","../../node_modules/@jbrowse/plugin-legacy-jbrowse/esm/JBrowse1TextSearchAdapter/JBrowse1TextSearchAdapter.js"],"sourcesContent":["/**\n * Helper class allows reading names index generated in JBrowse1\n * Adapted from https://github.com/GMOD/jbrowse/blob/master/src/JBrowse/Store/Hash.js\n */\nimport crc32 from 'crc/crc32';\nimport { Buffer } from 'buffer';\nexport default class HttpMap {\n    constructor(args) {\n        // make sure url has a trailing slash\n        this.url = args.url.endsWith('/') ? args.url : `${args.url}/`;\n    }\n    /**\n     * loads meta.json file from names directory and reads number of hash_bits used\n     */\n    async readMeta() {\n        const meta = await this.loadFile('meta.json');\n        const { compress, track_names: tracks } = meta;\n        const hashHexCharacters = Math.ceil(meta.hash_bits / 4);\n        return { hashHexCharacters, compress, tracks };\n    }\n    async getHashHexCharacters() {\n        const meta = await this.readMeta();\n        return meta.hashHexCharacters;\n    }\n    async getCompress() {\n        const meta = await this.readMeta();\n        return meta.compress;\n    }\n    async getTrackNames() {\n        const meta = await this.readMeta();\n        return meta.tracks;\n    }\n    /**\n     * Returns contents of a bucket given a key\n     * @param key - string\n     */\n    async get(key) {\n        const bucket = await this.getBucket(key);\n        return bucket[key];\n    }\n    /**\n     * Returns a bucket given a key\n     * @param key - string\n     */\n    async getBucket(key) {\n        const bucketIdent = this.hash(key);\n        const hexToDirPath = await this.hexToDirPath(bucketIdent);\n        return this.loadFile(hexToDirPath);\n    }\n    /**\n     * Loads a file using the url and provided id.\n     * Returns response object with contents of the file\n     * @param id - string\n     */\n    async loadFile(id) {\n        const response = await fetch(`${this.url}${id}`);\n        if (!response.ok) {\n            throw new Error(`HTTP ${response.status} ${response.statusText}`);\n        }\n        return response.json();\n    }\n    /**\n     * Returns the corresponding path of the file given a hex string\n     * @param hex - hex string\n     */\n    async hexToDirPath(hex) {\n        // zero-pad the hex string to be 8 chars if necessary\n        const hashHexCharacters = await this.getHashHexCharacters();\n        if (hashHexCharacters) {\n            const compress = await this.getCompress();\n            while (hex.length < 8) {\n                hex = `0${hex}`;\n            }\n            hex = hex.slice(8 - hashHexCharacters);\n            const dirpath = [];\n            for (let i = 0; i < hex.length; i += 3) {\n                dirpath.push(hex.slice(i, i + 3));\n            }\n            return `${dirpath.join('/')}.json${compress ? 'z' : ''}`;\n        }\n        return '';\n    }\n    hash(data) {\n        return crc32(Buffer.from(data)).toString(16).toLowerCase().replace('-', 'n');\n    }\n}\n","import { BaseAdapter, } from '@jbrowse/core/data_adapters/BaseAdapter';\nimport BaseResult from '@jbrowse/core/TextSearch/BaseResults';\nimport { readConfObject, } from '@jbrowse/core/configuration';\nimport HttpMap from './HttpMap';\n// Uses index built by generate-names.pl\nexport default class JBrowse1TextSearchAdapter extends BaseAdapter {\n    constructor(config, getSubAdapter, pluginManager) {\n        super(config, getSubAdapter, pluginManager);\n        const namesIndex = readConfObject(config, 'namesIndexLocation');\n        const { baseUri, uri } = namesIndex;\n        this.httpMap = new HttpMap({\n            url: baseUri ? new URL(uri, baseUri).href : uri,\n        });\n    }\n    /**\n     * Returns the contents of the file containing the query if it exists\n     * else it returns empty\n     * @param query - string query\n     */\n    async loadIndexFile(query) {\n        return this.httpMap.getBucket(query);\n    }\n    async searchIndex(args) {\n        const { searchType, queryString } = args;\n        const tracks = this.tracksNames || (await this.httpMap.getTrackNames());\n        const str = queryString.toLowerCase();\n        const entries = await this.loadIndexFile(str);\n        return entries[str]\n            ? this.formatResults(entries[str], tracks, searchType)\n            : [];\n    }\n    formatResults(results, tracks, searchType) {\n        return [\n            ...(searchType === 'exact'\n                ? []\n                : results.prefix.map(result => new BaseResult({\n                    label: typeof result === 'object' ? result.name : result,\n                    matchedAttribute: 'name',\n                    matchedObject: { result: result },\n                }))),\n            ...results.exact.map(result => {\n                const name = result[0];\n                const trackIndex = result[1];\n                const refName = result[3];\n                const start = result[4];\n                const end = result[5];\n                const locstring = `${refName || name}:${start}-${end}`;\n                return new BaseResult({\n                    locString: locstring,\n                    label: name,\n                    matchedAttribute: 'name',\n                    matchedObject: result,\n                    trackId: tracks[trackIndex],\n                });\n            }),\n        ].filter(result => result.getLabel() !== 'too many matches');\n    }\n    freeResources() { }\n}\n"],"names":["HttpMap","args","meta","compress","tracks","key","bucketIdent","hexToDirPath","id","response","hex","hashHexCharacters","dirpath","i","data","crc32","Buffer","JBrowse1TextSearchAdapter","BaseAdapter","config","getSubAdapter","pluginManager","namesIndex","readConfObject","baseUri","uri","query","searchType","queryString","str","entries","results","result","BaseResult","name","trackIndex","refName","start","end","locstring"],"mappings":"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","x_google_ignoreList":[0,1]}