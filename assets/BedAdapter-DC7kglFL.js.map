{"version":3,"file":"BedAdapter-DC7kglFL.js","sources":["../../node_modules/@jbrowse/plugin-bed/esm/BedAdapter/BedAdapter.js"],"sourcesContent":["import BED from '@gmod/bed';\nimport { BaseFeatureDataAdapter, } from '@jbrowse/core/data_adapters/BaseAdapter';\nimport { openLocation } from '@jbrowse/core/util/io';\nimport { ObservableCreate } from '@jbrowse/core/util/rxjs';\nimport { isGzip } from '@jbrowse/core/util';\nimport IntervalTree from '@flatten-js/interval-tree';\nimport { unzip } from '@gmod/bgzf-filehandle';\n// locals\nimport { featureData } from '../util';\nclass BedAdapter extends BaseFeatureDataAdapter {\n    constructor() {\n        super(...arguments);\n        this.intervalTrees = {};\n    }\n    async loadDataP(opts = {}) {\n        const pm = this.pluginManager;\n        const bedLoc = this.getConf('bedLocation');\n        const buf = await openLocation(bedLoc, pm).readFile(opts);\n        const buffer = isGzip(buf) ? await unzip(buf) : buf;\n        // 512MB  max chrome string length is 512MB\n        if (buffer.length > 536870888) {\n            throw new Error('Data exceeds maximum string length (512MB)');\n        }\n        const data = new TextDecoder('utf8', { fatal: true }).decode(buffer);\n        const lines = data.split(/\\n|\\r\\n|\\r/).filter(f => !!f);\n        const headerLines = [];\n        let i = 0;\n        for (; i < lines.length && lines[i].startsWith('#'); i++) {\n            headerLines.push(lines[i]);\n        }\n        const header = headerLines.join('\\n');\n        const features = {};\n        for (; i < lines.length; i++) {\n            const line = lines[i];\n            const tab = line.indexOf('\\t');\n            const refName = line.slice(0, tab);\n            if (!features[refName]) {\n                features[refName] = [];\n            }\n            features[refName].push(line);\n        }\n        const autoSql = this.getConf('autoSql');\n        const parser = new BED({ autoSql });\n        const columnNames = this.getConf('columnNames');\n        const scoreColumn = this.getConf('scoreColumn');\n        const colRef = this.getConf('colRef');\n        const colStart = this.getConf('colStart');\n        const colEnd = this.getConf('colEnd');\n        return {\n            header,\n            features,\n            parser,\n            columnNames,\n            scoreColumn,\n            colRef,\n            colStart,\n            colEnd,\n        };\n    }\n    async loadData(opts = {}) {\n        if (!this.bedFeatures) {\n            this.bedFeatures = this.loadDataP(opts).catch((e) => {\n                this.bedFeatures = undefined;\n                throw e;\n            });\n        }\n        return this.bedFeatures;\n    }\n    async getRefNames(opts = {}) {\n        const { features } = await this.loadData(opts);\n        return Object.keys(features);\n    }\n    async getHeader(opts = {}) {\n        const { header } = await this.loadData(opts);\n        return header;\n    }\n    async getNames() {\n        const { header, columnNames } = await this.loadData();\n        if (columnNames.length) {\n            return columnNames;\n        }\n        const defs = header.split(/\\n|\\r\\n|\\r/).filter(f => !!f);\n        const defline = defs.at(-1);\n        return (defline === null || defline === void 0 ? void 0 : defline.includes('\\t'))\n            ? defline\n                .slice(1)\n                .split('\\t')\n                .map(field => field.trim())\n            : undefined;\n    }\n    async loadFeatureIntervalTreeHelper(refName) {\n        const { colRef, colStart, colEnd, features, parser, scoreColumn } = await this.loadData();\n        const lines = features[refName];\n        if (!lines) {\n            return undefined;\n        }\n        const names = await this.getNames();\n        const intervalTree = new IntervalTree();\n        const ret = lines.map((f, i) => {\n            const uniqueId = `${this.id}-${refName}-${i}`;\n            return featureData(f, colRef, colStart, colEnd, scoreColumn, parser, uniqueId, names);\n        });\n        for (const obj of ret) {\n            intervalTree.insert([obj.get('start'), obj.get('end')], obj);\n        }\n        return intervalTree;\n    }\n    async loadFeatureIntervalTree(refName) {\n        if (!this.intervalTrees[refName]) {\n            this.intervalTrees[refName] = this.loadFeatureIntervalTreeHelper(refName).catch((e) => {\n                this.intervalTrees[refName] = undefined;\n                throw e;\n            });\n        }\n        return this.intervalTrees[refName];\n    }\n    getFeatures(query, opts = {}) {\n        return ObservableCreate(async (observer) => {\n            const { start, end, refName } = query;\n            const intervalTree = await this.loadFeatureIntervalTree(refName);\n            intervalTree === null || intervalTree === void 0 ? void 0 : intervalTree.search([start, end]).forEach(f => {\n                observer.next(f);\n            });\n            observer.complete();\n        }, opts.signal);\n    }\n    freeResources() { }\n}\nBedAdapter.capabilities = ['getFeatures', 'getRefNames'];\nexport default BedAdapter;\n"],"names":["BedAdapter","BaseFeatureDataAdapter","opts","pm","bedLoc","buf","openLocation","buffer","isGzip","unzip","lines","f","headerLines","i","header","features","line","tab","refName","autoSql","parser","BED","columnNames","scoreColumn","colRef","colStart","colEnd","e","defline","field","names","intervalTree","IntervalTree","ret","uniqueId","featureData","obj","query","ObservableCreate","observer","start","end"],"mappings":"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","x_google_ignoreList":[0]}