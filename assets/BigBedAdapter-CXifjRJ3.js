import{B as T}from"./bbi-DfLdxWK-.js";import{aI as z,aJ as _,ay as C,aK as D,aL as L,a5 as v,K as R,a4 as j,I as J,Q as K,u as k,O as Y}from"./index-Do-r7xR6.js";import{B as G,m as M,i as W,u as X}from"./util-Cdckf4sT.js";function Z(A){return A.filter(e=>!!e)}class Q extends T{constructor(){super(...arguments),this.readIndicesCache=new z({cache:new _({maxSize:1}),fill:(e,t)=>this._readIndices({...e,signal:t})})}readIndices(e={}){const{signal:t,...n}=e;return this.readIndicesCache.get(JSON.stringify(n),e,t)}async getView(e,t){return this.getUnzoomedView(t)}async _readIndices(e){const{extHeaderOffset:t,isBigEndian:n}=await this.getHeader(e),{buffer:l}=await this.bbi.read(C.Buffer.alloc(64),0,64,Number(t)),i=!n,N=l,f=new DataView(N.buffer,N.byteOffset,N.length);let a=0;a+=2;const u=f.getUint16(a,i);a+=2;const h=Number(f.getBigUint64(a,i));if(a+=8,u===0)return[];const m=20,b=m*u,{buffer:s}=await this.bbi.read(C.Buffer.alloc(b),0,b,Number(h)),c=[];for(let r=0;r<u;r+=1){const g=s.subarray(r*m),d=new DataView(g.buffer,g.byteOffset,g.length);let w=0;const O=d.getInt16(w,i);w+=2;const F=d.getInt16(w,i);w+=2;const B=Number(d.getBigUint64(w,i));w+=12;const y=d.getInt16(w,i);c.push({type:O,fieldcount:F,offset:Number(B),field:y})}return c}async searchExtraIndexBlocks(e,t={}){const{isBigEndian:n}=await this.getHeader(t),l=await this.readIndices(t);if(l.length===0)return[];const i=l.map(async N=>{const{offset:f,field:a}=N,{buffer:u}=await this.bbi.read(C.Buffer.alloc(32),0,32,f,t),h=!n,m=u,b=new DataView(m.buffer,m.byteOffset,m.length);let s=0;s+=4;const c=b.getInt32(s,h);s+=4;const r=b.getInt32(s,h);s+=4;const g=b.getInt32(s,h);s+=4,s+=8;const d=async O=>{const F=Number(O),B=4+c*(r+g),{buffer:y}=await this.bbi.read(C.Buffer.alloc(B),0,B,F,t),x=y,S=new DataView(x.buffer,x.byteOffset,x.length);let o=0;const H=S.getInt8(o);o+=2;const V=S.getInt16(o,h);o+=2;const U=[];if(H===0){const p=[];for(let E=0;E<V;E++){const $=x.subarray(o,o+r).toString().replaceAll("\0","");o+=r;const P=Number(S.getBigUint64(o,h));o+=8,p.push({key:$,offset:P})}let I=0;for(const{key:E,offset:$}of p){if(e.localeCompare(E)<0&&I)return d(I);I=$}return d(I)}else if(H===1){for(let p=0;p<V;p++){const I=x.subarray(o,o+r).toString().replaceAll("\0","");o+=r;const E=Number(S.getBigUint64(o,h));o+=8;const $=S.getUint32(o,h);o+=4;const P=S.getUint32(o,h);o+=4,U.push({key:I,offset:E,length:$,reserved:P})}for(const p of U)if(p.key===e)return{...p,field:a};return}};return d(f+32)});return Z(await Promise.all(i))}async searchExtraIndex(e,t={}){const n=await this.searchExtraIndexBlocks(e,t);if(n.length===0)return[];const l=await this.getUnzoomedView(t),i=n.map(f=>new D(a=>{l.readFeatures(a,[f],t).catch(u=>{a.error(u)})}).pipe(L((a,u)=>a.concat(u)),v(a=>{for(const u of a)u.field=f.field;return a})));return(await R(j(...i))).filter(f=>{var a;return((a=f.rest)===null||a===void 0?void 0:a.split("	")[(f.field||0)-3])===e})}}class se extends J.BaseFeatureDataAdapter{async configurePre(e){const t=this.pluginManager,n=new Q({filehandle:K.openLocation(this.getConf("bigBedLocation"),t)}),l=await n.getHeader(e),i=new G({autoSql:l.autoSql});return{bigbed:n,header:l,parser:i}}async configure(e){return this.cached||(this.cached=this.configurePre(e).catch(t=>{throw this.cached=void 0,t})),this.cached}async getRefNames(e){const{header:t}=await this.configure(e);return Object.keys(t.refsByName)}async getHeader(e){const{parser:t,header:n}=await this.configure(e),{version:l,fileType:i}=n,{fields:N,...f}=t.autoSql;return{version:l,fileType:i,autoSql:{...f},fields:Object.fromEntries(N.map(({name:a,comment:u})=>[a,u]))}}async getFeaturesHelper(e,t,n,l,i=e){const{signal:N}=t,f=this.getConf("scoreColumn"),a=this.getConf("aggregateField"),{parser:u,bigbed:h}=await this.configure(t),m=await h.getFeatures(e.refName,e.start,e.end,{signal:N,basesPerSpan:e.end-e.start});if(l&&m.length){let s=Number.POSITIVE_INFINITY,c=Number.NEGATIVE_INFINITY;for(const r of m)r.start<s&&(s=r.start),r.end>c&&(c=r.end);if(c>e.end||s<e.start){await this.getFeaturesHelper({...e,start:s,end:c},t,n,!1,e);return}}const b={};if(m.some(s=>s.uniqueId===void 0))throw new Error("found uniqueId undefined");for(const s of m){const c=u.parseLine(`${e.refName}	${s.start}	${s.end}	${s.rest}`,{uniqueId:s.uniqueId}),r=c[a];b[r]||(b[r]=[]);const{uniqueId:g,type:d,chromStart:w,chromStarts:O,blockStarts:F,blockCount:B,blockSizes:y,chromEnd:x,thickStart:S,thickEnd:o,chrom:H,score:V,...U}=c,p=B?M({chromStarts:O,blockStarts:F,blockCount:B,blockSizes:y,uniqueId:g,refName:e.refName,start:s.start}):[];if(W(c)){const I=X({...U,uniqueId:g,type:d,start:s.start,end:s.end,refName:e.refName,score:f?+c[f]:V,chromStarts:O,blockCount:B,blockSizes:y,thickStart:S,thickEnd:o,subfeatures:p});r?b[r].push(I):k.doesIntersect2(I.start,I.end,i.start,i.end)&&n.next(new k.SimpleFeature({id:`${this.id}-${g}`,data:I}))}else k.doesIntersect2(s.start,s.end,i.start,i.end)&&n.next(new k.SimpleFeature({id:`${this.id}-${g}`,data:{...U,uniqueId:g,type:d,start:s.start,score:f?+c[f]:V,end:s.end,refName:e.refName,subfeatures:p}}))}Object.entries(b).map(([s,c])=>{const r=k.min(c.map(d=>d.start)),g=k.max(c.map(d=>d.end));if(k.doesIntersect2(r,g,i.start,i.end)){const{uniqueId:d,strand:w}=c[0];n.next(new k.SimpleFeature({id:`${this.id}-${d}-parent`,data:{type:"gene",subfeatures:c,strand:w,name:s,start:r,end:g,refName:e.refName}}))}}),n.complete()}getFeatures(e,t={}){return Y(async n=>{try{await this.getFeaturesHelper(e,t,n,!0)}catch(l){n.error(l)}},t.signal)}freeResources(){}}export{se as default};
//# sourceMappingURL=BigBedAdapter-CXifjRJ3.js.map
