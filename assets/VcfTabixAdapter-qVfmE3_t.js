import{I as u,Q as o,a3 as g,O as h}from"./index-CYW4W05g.js";import{T as l}from"./tabixIndexedFile-rQBx9loD.js";import{V as p}from"./index-DNV-6L8V.js";class v extends u.BaseFeatureDataAdapter{async configurePre(){const e=this.pluginManager,t=this.getConf("vcfGzLocation"),a=this.getConf(["index","location"]),r=this.getConf(["index","indexType"]),c=o.openLocation(t,e),n=r==="CSI",i=new l({filehandle:c,csiFilehandle:n?o.openLocation(a,e):void 0,tbiFilehandle:n?void 0:o.openLocation(a,e),chunkCacheSize:50*2**20}),s=await i.getHeader();return{vcf:i,parser:new g({header:s})}}async configure(){return this.configured||(this.configured=this.configurePre().catch(e=>{throw this.configured=void 0,e})),this.configured}async getRefNames(e={}){const{vcf:t}=await this.configure();return t.getReferenceSequenceNames(e)}async getHeader(){const{vcf:e}=await this.configure();return e.getHeader()}async getMetadata(){const{parser:e}=await this.configure();return e.getMetadata()}getFeatures(e,t={}){return h(async a=>{const{refName:r,start:c,end:n}=e,{vcf:i,parser:s}=await this.configure();await i.getLines(r,c,n,{lineCallback:(f,d)=>{a.next(new p({variant:s.parseLine(f),parser:s,id:`${this.id}-vcf-${d}`}))},...t}),a.complete()},t.signal)}freeResources(){}}export{v as default};
//# sourceMappingURL=VcfTabixAdapter-qVfmE3_t.js.map
