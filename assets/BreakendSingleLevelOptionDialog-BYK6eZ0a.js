import{m as $,R as t,e as j,C as x,o as T,a as C,c as L,D as M,f as z,B as b,u as v,h as O,w as N,d as P}from"./index-DvmOrY9r.js";const R=$()({block:{display:"block"}});function _({checked:s,disabled:i,label:a,onChange:e}){const{classes:d}=R();return t.createElement(j,{disabled:i,className:d.block,control:t.createElement(x,{checked:s,onChange:e}),label:a})}function B(s){return s.map(({id:i,displays:a,...e})=>({...e,displays:a.map(({id:d,...c})=>c)}))}const V=T(function({model:s,handleClose:i,feature:a,assemblyName:e,viewType:d,view:c}){const[u,y]=C.useState(!0),[g,f]=C.useState(!0);return t.createElement(L.Dialog,{open:!0,onClose:i,title:"Multi-level breakpoint split view options"},t.createElement(M,null,t.createElement(_,{checked:u,label:"Copy tracks into the new view",onChange:n=>{y(n.target.checked)}}),u?t.createElement(_,{checked:g,disabled:!u,label:"Mirror the copied tracks (only available if copying tracks and using two level)",onChange:n=>{f(n.target.checked)}}):null),t.createElement(z,null,t.createElement(b,{onClick:()=>{(async()=>{const n=v.getSession(s);try{const o=await n.assemblyManager.waitForAssembly(e);if(!o)throw new Error(`assembly ${e} not found`);const{refName:r,pos:m,mateRefName:p,matePos:k}=d.getBreakendCoveringRegions({feature:a,assembly:o}),w=O(c.tracks),l=n.addView("BreakpointSplitView",{type:"BreakpointSplitView",displayName:`${a.get("name")||a.get("id")||"breakend"} split detail`,views:[{type:"LinearGenomeView",hideHeader:!0,tracks:B(O(c.tracks))},{type:"LinearGenomeView",hideHeader:!0,tracks:B(g?[...w].reverse():w)}]}),S=o.regions.find(E=>E.refName===r),h=o.regions.find(E=>E.refName===p);if(!S||!h)throw new Error("can't find regions");await Promise.all([l.views[0].navToLocations([{refName:r,start:S.start,end:m,assemblyName:e},{refName:r,start:m+1,end:S.end,assemblyName:e}]),l.views[1].navToLocations([{refName:p,start:h.start,end:k,assemblyName:e},{refName:p,start:k+1,end:h.end,assemblyName:e}])]),await N(()=>l.views[1].initialized&&l.views[0].initialized),l.views[1].zoomTo(10),l.views[0].zoomTo(10),l.views[1].centerAt(k,p),l.views[0].centerAt(m,r)}catch(o){console.error(o),n.notify(`${o}`)}})(),i()},variant:"contained",color:"primary",autoFocus:!0},"OK"),t.createElement(b,{color:"secondary",variant:"contained",onClick:()=>{i()}},"Cancel")))});function F(s){return s.map(({id:i,displays:a,...e})=>({...e,displays:a.map(({id:d,...c})=>c)}))}const D=T(function({model:s,handleClose:i,feature:a,assemblyName:e,viewType:d,view:c}){const[u,y]=C.useState(!0),[g,f]=v.useLocalStorage("breakpointWindowSize","5000");return t.createElement(L.Dialog,{open:!0,onClose:i,title:"Single-level breakpoint split view options"},t.createElement(M,null,t.createElement(_,{checked:u,label:"Copy tracks into the new view",onChange:n=>{y(n.target.checked)}}),t.createElement(P,{label:"Window size (bp)",value:g,onChange:n=>{f(n.target.value)}})),t.createElement(z,null,t.createElement(b,{onClick:()=>{const n=v.getSession(s);(async()=>{try{const o=n.assemblyManager.get(e),r=+g;if(Number.isNaN(r))throw new Error("windowSize not a number");const{refName:m,pos:p,mateRefName:k,matePos:w}=d.getBreakendCoveringRegions({feature:a,assembly:o});await n.addView("BreakpointSplitView",{type:"BreakpointSplitView",displayName:`${a.get("name")||a.get("id")||"breakend"} split detail`,views:[{type:"LinearGenomeView",tracks:F(O(c.tracks))}]}).views[0].navToLocations(v.gatherOverlaps([{refName:m,start:Math.max(0,p-r),end:p+r,assemblyName:e},{refName:k,start:Math.max(0,w-r),end:w+r,assemblyName:e}],r))}catch(o){console.error(o),n.notify(`${o}`)}})(),i()},variant:"contained",color:"primary",autoFocus:!0},"OK"),t.createElement(b,{color:"secondary",variant:"contained",onClick:()=>{i()}},"Cancel")))}),G=Object.freeze(Object.defineProperty({__proto__:null,default:V},Symbol.toStringTag,{value:"Module"})),W=Object.freeze(Object.defineProperty({__proto__:null,default:D},Symbol.toStringTag,{value:"Module"})),H=Object.freeze(Object.defineProperty({__proto__:null,default:V},Symbol.toStringTag,{value:"Module"})),I=Object.freeze(Object.defineProperty({__proto__:null,default:D},Symbol.toStringTag,{value:"Module"}));export{G as B,W as a,H as b,I as c};
//# sourceMappingURL=BreakendSingleLevelOptionDialog-BYK6eZ0a.js.map
