{"version":3,"file":"BedTabixAdapter-C1lnCIlI.js","sources":["../node_modules/@jbrowse/plugin-bed/esm/BedTabixAdapter/BedTabixAdapter.js"],"sourcesContent":["import BED from '@gmod/bed';\nimport { BaseFeatureDataAdapter, } from '@jbrowse/core/data_adapters/BaseAdapter';\nimport { openLocation } from '@jbrowse/core/util/io';\nimport { ObservableCreate } from '@jbrowse/core/util/rxjs';\nimport { TabixIndexedFile } from '@gmod/tabix';\n// locals\nimport { featureData } from '../util';\nclass BedTabixAdapter extends BaseFeatureDataAdapter {\n    constructor(config, getSubAdapter, pluginManager) {\n        super(config, getSubAdapter, pluginManager);\n        const bedGzLoc = this.getConf('bedGzLocation');\n        const type = this.getConf(['index', 'indexType']);\n        const loc = this.getConf(['index', 'location']);\n        const autoSql = this.getConf('autoSql');\n        const pm = this.pluginManager;\n        this.bed = new TabixIndexedFile({\n            filehandle: openLocation(bedGzLoc, pm),\n            csiFilehandle: type === 'CSI' ? openLocation(loc, pm) : undefined,\n            tbiFilehandle: type !== 'CSI' ? openLocation(loc, pm) : undefined,\n            chunkCacheSize: 50 * 2 ** 20,\n        });\n        this.columnNames = this.getConf('columnNames');\n        this.scoreColumn = this.getConf('scoreColumn');\n        this.parser = new BED({ autoSql });\n    }\n    async getRefNames(opts = {}) {\n        return this.bed.getReferenceSequenceNames(opts);\n    }\n    async getHeader() {\n        return this.bed.getHeader();\n    }\n    async getNames() {\n        if (this.columnNames.length) {\n            return this.columnNames;\n        }\n        const header = await this.bed.getHeader();\n        const defs = header.split(/\\n|\\r\\n|\\r/).filter(f => !!f);\n        const defline = defs.at(-1);\n        return (defline === null || defline === void 0 ? void 0 : defline.includes('\\t'))\n            ? defline\n                .slice(1)\n                .split('\\t')\n                .map(f => f.trim())\n            : undefined;\n    }\n    getFeatures(query, opts = {}) {\n        return ObservableCreate(async (observer) => {\n            const meta = await this.bed.getMetadata();\n            const { columnNumbers } = meta;\n            const colRef = columnNumbers.ref - 1;\n            const colStart = columnNumbers.start - 1;\n            const colEnd = columnNumbers.end - 1;\n            // colSame handles special case for tabix where a single column is both\n            // the start and end, this is assumed to be covering the base at this\n            // position (e.g. tabix -s 1 -b 2 -e 2) begin and end are same\n            const names = await this.getNames();\n            await this.bed.getLines(query.refName, query.start, query.end, {\n                lineCallback: (line, fileOffset) => {\n                    observer.next(featureData(line, colRef, colStart, colEnd, this.scoreColumn, this.parser, `${this.id}-${fileOffset}`, names));\n                },\n                signal: opts.signal,\n            });\n            observer.complete();\n        }, opts.signal);\n    }\n    freeResources() { }\n}\nBedTabixAdapter.capabilities = ['getFeatures', 'getRefNames'];\nexport default BedTabixAdapter;\n"],"names":["BedTabixAdapter","BaseFeatureDataAdapter","config","getSubAdapter","pluginManager","bedGzLoc","type","loc","autoSql","pm","TabixIndexedFile","openLocation","BED","opts","defline","f","query","ObservableCreate","observer","meta","columnNumbers","colRef","colStart","colEnd","names","line","fileOffset","featureData"],"mappings":"uMAOA,MAAMA,UAAwBC,EAAAA,sBAAuB,CACjD,YAAYC,EAAQC,EAAeC,EAAe,CAC9C,MAAMF,EAAQC,EAAeC,CAAa,EAC1C,MAAMC,EAAW,KAAK,QAAQ,eAAe,EACvCC,EAAO,KAAK,QAAQ,CAAC,QAAS,WAAW,CAAC,EAC1CC,EAAM,KAAK,QAAQ,CAAC,QAAS,UAAU,CAAC,EACxCC,EAAU,KAAK,QAAQ,SAAS,EAChCC,EAAK,KAAK,cAChB,KAAK,IAAM,IAAIC,EAAiB,CAC5B,WAAYC,EAAAA,aAAaN,EAAUI,CAAE,EACrC,cAAeH,IAAS,MAAQK,EAAY,aAACJ,EAAKE,CAAE,EAAI,OACxD,cAAeH,IAAS,MAAQK,EAAY,aAACJ,EAAKE,CAAE,EAAI,OACxD,eAAgB,GAAK,GAAK,EACtC,CAAS,EACD,KAAK,YAAc,KAAK,QAAQ,aAAa,EAC7C,KAAK,YAAc,KAAK,QAAQ,aAAa,EAC7C,KAAK,OAAS,IAAIG,EAAI,CAAE,QAAAJ,CAAO,CAAE,CACzC,CACI,MAAM,YAAYK,EAAO,GAAI,CACzB,OAAO,KAAK,IAAI,0BAA0BA,CAAI,CACtD,CACI,MAAM,WAAY,CACd,OAAO,KAAK,IAAI,UAAW,CACnC,CACI,MAAM,UAAW,CACb,GAAI,KAAK,YAAY,OACjB,OAAO,KAAK,YAIhB,MAAMC,GAFS,MAAM,KAAK,IAAI,UAAW,GACrB,MAAM,YAAY,EAAE,OAAOC,GAAK,CAAC,CAACA,CAAC,EAClC,GAAG,EAAE,EAC1B,OAAQD,GAAY,MAAsCA,EAAQ,SAAS,GAAI,EACzEA,EACG,MAAM,CAAC,EACP,MAAM,GAAI,EACV,IAAIC,GAAKA,EAAE,KAAM,CAAA,EACpB,MACd,CACI,YAAYC,EAAOH,EAAO,GAAI,CAC1B,OAAOI,EAAiB,MAAOC,GAAa,CACxC,MAAMC,EAAO,MAAM,KAAK,IAAI,YAAa,EACnC,CAAE,cAAAC,CAAa,EAAKD,EACpBE,EAASD,EAAc,IAAM,EAC7BE,EAAWF,EAAc,MAAQ,EACjCG,EAASH,EAAc,IAAM,EAI7BI,EAAQ,MAAM,KAAK,SAAU,EACnC,MAAM,KAAK,IAAI,SAASR,EAAM,QAASA,EAAM,MAAOA,EAAM,IAAK,CAC3D,aAAc,CAACS,EAAMC,IAAe,CAChCR,EAAS,KAAKS,EAAYF,EAAMJ,EAAQC,EAAUC,EAAQ,KAAK,YAAa,KAAK,OAAQ,GAAG,KAAK,EAAE,IAAIG,CAAU,GAAIF,CAAK,CAAC,CAC9H,EACD,OAAQX,EAAK,MAC7B,CAAa,EACDK,EAAS,SAAU,CAC/B,EAAWL,EAAK,MAAM,CACtB,CACI,eAAgB,CAAA,CACpB,CACAb,EAAgB,aAAe,CAAC,cAAe,aAAa","x_google_ignoreList":[0]}