import{m as d,o as f,r as s,R as e,b as p,D as E,q as x,v as g,a as c,J as h}from"./rpcWorker-CJ7cIcjW.js";const y=d()({dialogContent:{width:"80em"},textAreaFont:{fontFamily:"Courier New"},error:{color:"red",fontSize:"0.8em"}});function v(a){h(a)}const w=f(function({model:a,handleClose:l}){const{classes:r}=y(),{activeFilters:u}=a,[n,m]=s.useState(u.join(`
`)),[o,i]=s.useState();return s.useEffect(()=>{try{n.split(`
`).map(t=>t.trim()).filter(t=>!!t).map(t=>{v(t.trim())}),i(void 0)}catch(t){console.error(t),i(t)}},[n]),e.createElement(p.Dialog,{maxWidth:"xl",open:!0,onClose:l,title:"Add track filters"},e.createElement(E,null,e.createElement("div",null,"Add filters, in jexl format, one per line, starting with the string jexl:. Examples:"," ",e.createElement("ul",null,e.createElement("li",null,e.createElement("code",null,"jexl:get(feature,'name')=='BRCA1'")," - show only feature where the name attribute is BRCA1"),e.createElement("li",null,e.createElement("code",null,"jexl:get(feature,'type')=='gene'")," - show only gene type features in a GFF that has many other feature types"),e.createElement("li",null,e.createElement("code",null,"jexl:get(feature,'score') > 400")," - show only features that have a score greater than 400"))),o?e.createElement("p",{className:r.error},`${o}`):null,e.createElement(x,{variant:"outlined",multiline:!0,minRows:5,maxRows:10,className:r.dialogContent,fullWidth:!0,value:n,onChange:t=>{m(t.target.value)},InputProps:{classes:{input:r.textAreaFont}}})),e.createElement(g,null,e.createElement(c,{variant:"contained",color:"primary",type:"submit",autoFocus:!0,disabled:!!o,onClick:()=>{a.setJexlFilters(n.split(`
`)),l()}},"Submit"),e.createElement(c,{variant:"contained",color:"secondary",onClick:()=>{l()}},"Cancel")))});export{w as default};
//# sourceMappingURL=AddFiltersDialog-DDwK1flI.js.map
