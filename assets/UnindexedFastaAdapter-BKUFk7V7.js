import{I as p,Q as c,l as f,O as l,u as d}from"./index-DvmOrY9r.js";function h(r){return new Map(r.split(">").filter(e=>/\S/.test(e)).map(e=>{const[t,...a]=e.split(`
`),[s,...n]=t.split(" "),i=a.join("").replace(/\s/g,"");return[s,{description:n.join(" "),sequence:i}]}))}class m extends p.BaseSequenceAdapter{async getRefNames(e){const{fasta:t}=await this.setup(e);return[...t.keys()]}async getRegions(e){const{fasta:t}=await this.setup(e);return[...t.entries()].map(([a,s])=>({refName:a,start:0,end:s.sequence.length}))}async setupPre(e){const t=this.getConf("fastaLocation"),a=h(await c.openLocation(t,this.pluginManager).readFile("utf8"));return{fasta:new Map([...a.entries()].map(([s,n])=>[f.readConfObject(this.config,"rewriteRefNames",{refName:s})||s,n]))}}async getHeader(){const e=this.getConf("metadataLocation");return e.uri===""||e.uri==="/path/to/fa.metadata.yaml"?null:c.openLocation(e,this.pluginManager).readFile("utf8")}async setup(e){return this.setupP||(this.setupP=this.setupPre(e).catch(t=>{throw this.setupP=void 0,t})),this.setupP}getFeatures(e,t){const{refName:a,start:s,end:n}=e;return l(async i=>{const{fasta:u}=await this.setup(t),o=u.get(a);o&&i.next(new d.SimpleFeature({id:`${a}-${s}-${n}`,data:{refName:a,start:s,end:n,seq:o.sequence.slice(s,n)}})),i.complete()})}freeResources(){}}export{m as default};
//# sourceMappingURL=UnindexedFastaAdapter-BKUFk7V7.js.map
