{"version":3,"file":"drawFeats-BmUrMdOe.js","sources":["../node_modules/@jbrowse/plugin-alignments/esm/LinearReadCloudDisplay/util.js","../node_modules/@jbrowse/plugin-alignments/esm/LinearReadCloudDisplay/drawPairChains.js","../node_modules/@jbrowse/plugin-alignments/esm/LinearReadCloudDisplay/drawLongReadChains.js","../node_modules/@jbrowse/plugin-alignments/esm/LinearReadCloudDisplay/drawFeats.js"],"sourcesContent":["// avoid drawing negative width features for SVG exports\nexport function fillRectCtx(x, y, width, height, ctx, fillColor) {\n    if (width < 0) {\n        x += width;\n        width = -width;\n    }\n    if (height < 0) {\n        y += height;\n        height = -height;\n    }\n    if (fillColor) {\n        ctx.fillStyle = fillColor;\n    }\n    ctx.fillRect(x, y, width, height);\n}\nexport function strokeRectCtx(x, y, width, height, ctx, strokeColor) {\n    if (width < 0) {\n        x += width;\n        width = -width;\n    }\n    if (height < 0) {\n        y += height;\n        height = -height;\n    }\n    if (strokeColor) {\n        ctx.strokeStyle = strokeColor;\n    }\n    ctx.strokeRect(x, y, width, height);\n}\n","import { getConf } from '@jbrowse/core/configuration';\nimport { max, min } from '@jbrowse/core/util';\nimport { fillRectCtx, strokeRectCtx } from './util';\nimport { getPairedInsertSizeAndOrientationColor, getPairedInsertSizeColor, getPairedOrientationColor, } from '../shared/color';\nexport function drawPairChains({ ctx, self, chainData, view, asm, }) {\n    var _a, _b, _c, _d, _e, _f, _g;\n    const coords = [];\n    const featureHeight = getConf(self, 'featureHeight');\n    const type = ((_a = self.colorBy) === null || _a === void 0 ? void 0 : _a.type) || 'insertSizeAndOrientation';\n    const { chains, stats } = chainData;\n    for (const chain of chains) {\n        // if we're looking at a paired read (flag 1) then assume it is just\n        // two reads (some small cases may defy this assumption such as\n        // secondary alignments but this may be uncommon)\n        if (chain.length > 1) {\n            const v0 = chain[0];\n            const v1 = chain[1];\n            const ra1 = asm.getCanonicalRefName(v0.refName) || v0.refName;\n            const ra2 = asm.getCanonicalRefName(v1.refName) || v1.refName;\n            const r1s = (_b = view.bpToPx({ refName: ra1, coord: v0.start })) === null || _b === void 0 ? void 0 : _b.offsetPx;\n            const r1e = (_c = view.bpToPx({ refName: ra1, coord: v0.end })) === null || _c === void 0 ? void 0 : _c.offsetPx;\n            const r2s = (_d = view.bpToPx({ refName: ra2, coord: v1.start })) === null || _d === void 0 ? void 0 : _d.offsetPx;\n            const r2e = (_e = view.bpToPx({ refName: ra2, coord: v1.end })) === null || _e === void 0 ? void 0 : _e.offsetPx;\n            let distance = 0;\n            if (r1s !== undefined &&\n                r1e !== undefined &&\n                r2s !== undefined &&\n                r2e !== undefined) {\n                if (v0.refName === v1.refName) {\n                    const s = Math.min(v0.start, v1.start);\n                    const e = Math.max(v0.end, v1.end);\n                    distance = Math.abs(e - s);\n                }\n                coords.push({\n                    r1s,\n                    r1e,\n                    r2s,\n                    r2e,\n                    v0,\n                    v1,\n                    distance,\n                });\n            }\n        }\n        else if (self.drawSingletons) {\n            const v0 = chain[0];\n            const ra1 = asm.getCanonicalRefName(v0.refName) || v0.refName;\n            const r1s = (_f = view.bpToPx({ refName: ra1, coord: v0.start })) === null || _f === void 0 ? void 0 : _f.offsetPx;\n            const r1e = (_g = view.bpToPx({ refName: ra1, coord: v0.end })) === null || _g === void 0 ? void 0 : _g.offsetPx;\n            if (r1s !== undefined && r1e !== undefined) {\n                const w1 = Math.max(r1e - r1s, 2);\n                fillRectCtx(r1s - view.offsetPx, 0, w1, featureHeight, ctx, '#f00');\n                strokeRectCtx(r1s - view.offsetPx, 0, w1, featureHeight, ctx, '#a00');\n            }\n        }\n    }\n    const maxD = Math.log(max(coords.map(c => c.distance)));\n    const minD = Math.max(Math.log(min(coords.map(c => c.distance))) - 1, 0);\n    const scaler = (self.height - 20) / (maxD - minD);\n    for (const { r1e, r1s, r2e, r2s, distance, v0, v1 } of coords) {\n        const w1 = Math.max(r1e - r1s, 2);\n        const w2 = Math.max(r2e - r2s, 2);\n        const [fill, stroke] = getPairedColor({ type, v0, v1, stats }) || [];\n        const top = (Math.log(distance) - minD) * scaler;\n        const halfHeight = featureHeight / 2 - 0.5;\n        const w = r2s - r1e;\n        fillRectCtx(r1e - view.offsetPx, top + halfHeight, w, 1, ctx, 'black');\n        strokeRectCtx(r1s - view.offsetPx, top, w1, featureHeight, ctx, stroke);\n        strokeRectCtx(r2s - view.offsetPx, top, w2, featureHeight, ctx, stroke);\n        fillRectCtx(r1s - view.offsetPx, top, w1, featureHeight, ctx, fill);\n        fillRectCtx(r2s - view.offsetPx, top, w2, featureHeight, ctx, fill);\n    }\n}\nexport function getPairedColor({ type, v0, v1, stats, }) {\n    if (type === 'insertSizeAndOrientation') {\n        return getPairedInsertSizeAndOrientationColor(v0, v1, stats);\n    }\n    if (type === 'orientation') {\n        return getPairedOrientationColor(v0);\n    }\n    if (type === 'insertSize') {\n        return getPairedInsertSizeColor(v0, v1, stats);\n    }\n    if (type === 'gradient') {\n        const s = Math.min(v0.start, v1.start);\n        const e = Math.max(v0.end, v1.end);\n        return [\n            `hsl(${Math.log10(Math.abs(e - s)) * 10},50%,50%)`,\n            `hsl(${Math.log10(Math.abs(e - s)) * 10},50%,30%)`,\n        ];\n    }\n    return undefined;\n}\n","import { getConf } from '@jbrowse/core/configuration';\nimport { max, min } from '@jbrowse/core/util';\nimport { fillColor, strokeColor } from '../shared/color';\nimport { fillRectCtx, strokeRectCtx } from './util';\nexport function drawLongReadChains({ ctx, self, chainData, view, asm, }) {\n    var _a, _b, _c, _d, _e;\n    const distances = [];\n    const minXs = [];\n    const { chains } = chainData;\n    const { height } = self;\n    const featureHeight = getConf(self, 'featureHeight');\n    // get bounds on the 'distances' (pixel span that a particular split long\n    // read 'chain' would have in view)\n    for (const chain of chains) {\n        let minX = Number.MAX_VALUE;\n        let maxX = Number.MIN_VALUE;\n        for (const elt of chain) {\n            const refName = asm.getCanonicalRefName(elt.refName) || elt.refName;\n            const rs = (_a = view.bpToPx({ refName, coord: elt.start })) === null || _a === void 0 ? void 0 : _a.offsetPx;\n            const re = (_b = view.bpToPx({ refName, coord: elt.end })) === null || _b === void 0 ? void 0 : _b.offsetPx;\n            if (rs !== undefined && re !== undefined) {\n                minX = Math.min(minX, rs);\n                maxX = Math.max(maxX, re);\n            }\n        }\n        const distance = Math.abs(maxX - minX);\n        distances.push(distance);\n        minXs.push(minX);\n    }\n    const maxD = Math.log(max(distances));\n    const minD = Math.max(Math.log(min(distances)) - 1, 0);\n    const scaler = (height - 20) / (maxD - minD);\n    const halfHeight = featureHeight / 2 - 0.5;\n    // draw split long read 'chains' as connected entities\n    for (let i = 0; i < chains.length; i++) {\n        const chain = chains[i];\n        const w = distances[i];\n        const top = (Math.log(w) - minD) * scaler;\n        const min = minXs[i];\n        fillRectCtx(min - view.offsetPx, top + halfHeight, w, 1, ctx, 'black');\n        const c1 = chain[0];\n        let primaryStrand;\n        if (!(c1.flags & 2048)) {\n            primaryStrand = c1.strand;\n        }\n        else {\n            const res = (_c = c1.SA) === null || _c === void 0 ? void 0 : _c.split(';')[0].split(',')[2];\n            primaryStrand = res === '-' ? -1 : 1;\n        }\n        for (const v0 of chain) {\n            const ra = asm.getCanonicalRefName(v0.refName) || v0.refName;\n            const rs = (_d = view.bpToPx({ refName: ra, coord: v0.start })) === null || _d === void 0 ? void 0 : _d.offsetPx;\n            const re = (_e = view.bpToPx({ refName: ra, coord: v0.end })) === null || _e === void 0 ? void 0 : _e.offsetPx;\n            if (rs !== undefined && re !== undefined) {\n                const w = Math.max(re - rs, 2);\n                const l = rs - view.offsetPx;\n                const effectiveStrand = v0.strand * primaryStrand;\n                const c = effectiveStrand === -1 ? 'color_rev_strand' : 'color_fwd_strand';\n                strokeRectCtx(l, top, w, featureHeight, ctx, strokeColor[c]);\n                fillRectCtx(l, top, w, featureHeight, ctx, fillColor[c]);\n            }\n        }\n    }\n}\n","import { getContainingView, getSession } from '@jbrowse/core/util';\nimport { hasPairedReads } from '../shared/util';\nimport { drawPairChains } from './drawPairChains';\nimport { drawLongReadChains } from './drawLongReadChains';\nexport function drawFeats(self, ctx) {\n    const { chainData } = self;\n    if (!chainData) {\n        return;\n    }\n    const { assemblyManager } = getSession(self);\n    const view = getContainingView(self);\n    const assemblyName = view.assemblyNames[0];\n    const asm = assemblyManager.get(assemblyName);\n    if (!asm) {\n        return;\n    }\n    const hasPaired = hasPairedReads(chainData);\n    if (hasPaired) {\n        drawPairChains({ self, view, asm, ctx, chainData });\n    }\n    else {\n        drawLongReadChains({ self, view, asm, ctx, chainData });\n    }\n}\n"],"names":["fillRectCtx","x","y","width","height","ctx","fillColor","strokeRectCtx","strokeColor","drawPairChains","self","chainData","view","asm","_a","_b","_c","_d","_e","_f","_g","coords","featureHeight","getConf","type","chains","stats","chain","v0","v1","ra1","ra2","r1s","r1e","r2s","r2e","distance","s","e","w1","maxD","max","c","minD","min","scaler","w2","fill","stroke","getPairedColor","top","halfHeight","w","getPairedInsertSizeAndOrientationColor","getPairedOrientationColor","getPairedInsertSizeColor","drawLongReadChains","distances","minXs","minX","maxX","elt","refName","rs","re","i","c1","primaryStrand","ra","l","drawFeats","assemblyManager","getSession","getContainingView","assemblyName","hasPairedReads"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}